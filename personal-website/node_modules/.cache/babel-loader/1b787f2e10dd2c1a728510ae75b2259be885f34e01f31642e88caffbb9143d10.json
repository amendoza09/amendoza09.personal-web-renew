{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { DropdownContext } from \"../useDropdown/DropdownContext.js\";\nimport { DropdownActionTypes } from \"../useDropdown/useDropdown.types.js\";\nimport { useButton } from \"../useButton/useButton.js\";\nimport { combineHooksSlotProps } from \"../utils/combineHooksSlotProps.js\";\nimport { extractEventHandlers } from \"../utils/index.js\";\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuButton API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu-button)\n */\nexport function useMenuButton() {\n  let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    disabled = false,\n    focusableWhenDisabled,\n    rootRef: externalRef\n  } = parameters;\n  const menuContext = React.useContext(DropdownContext);\n  if (menuContext === null) {\n    throw new Error('useMenuButton: no menu context available.');\n  }\n  const {\n    state,\n    dispatch,\n    registerTrigger,\n    popupId\n  } = menuContext;\n  const {\n    getRootProps: getButtonRootProps,\n    rootRef: buttonRootRef,\n    active\n  } = useButton({\n    disabled,\n    focusableWhenDisabled,\n    rootRef: externalRef\n  });\n  const handleRef = useForkRef(buttonRootRef, registerTrigger);\n  const createHandleClick = otherHandlers => event => {\n    otherHandlers.onClick?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    dispatch({\n      type: DropdownActionTypes.toggle,\n      event\n    });\n  };\n  const createHandleKeyDown = otherHandlers => event => {\n    otherHandlers.onKeyDown?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      dispatch({\n        type: DropdownActionTypes.open,\n        event\n      });\n    }\n  };\n  const getOwnRootProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      onClick: createHandleClick(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers)\n    };\n  };\n  const getRootProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    const getCombinedProps = combineHooksSlotProps(getOwnRootProps, getButtonRootProps);\n    return {\n      'aria-haspopup': 'menu',\n      'aria-expanded': state.open,\n      'aria-controls': popupId,\n      ...externalProps,\n      ...externalEventHandlers,\n      ...getCombinedProps(externalEventHandlers),\n      tabIndex: 0,\n      // this is needed to make the button focused after click in Safari\n      ref: handleRef\n    };\n  };\n  return {\n    active,\n    getRootProps,\n    open: state.open,\n    rootRef: handleRef\n  };\n}","map":{"version":3,"names":["React","unstable_useForkRef","useForkRef","DropdownContext","DropdownActionTypes","useButton","combineHooksSlotProps","extractEventHandlers","useMenuButton","parameters","arguments","length","undefined","disabled","focusableWhenDisabled","rootRef","externalRef","menuContext","useContext","Error","state","dispatch","registerTrigger","popupId","getRootProps","getButtonRootProps","buttonRootRef","active","handleRef","createHandleClick","otherHandlers","event","onClick","defaultMuiPrevented","type","toggle","createHandleKeyDown","onKeyDown","key","preventDefault","open","getOwnRootProps","externalProps","externalEventHandlers","getCombinedProps","tabIndex","ref"],"sources":["/Users/antoniomendoza/Local/CSCI4300/Web-Programming-Project/Untitled/Personal-Website-renewed/personal-website/node_modules/@mui/base/useMenuButton/useMenuButton.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { DropdownContext } from \"../useDropdown/DropdownContext.js\";\nimport { DropdownActionTypes } from \"../useDropdown/useDropdown.types.js\";\nimport { useButton } from \"../useButton/useButton.js\";\nimport { combineHooksSlotProps } from \"../utils/combineHooksSlotProps.js\";\nimport { extractEventHandlers } from \"../utils/index.js\";\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuButton API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu-button)\n */\nexport function useMenuButton(parameters = {}) {\n  const {\n    disabled = false,\n    focusableWhenDisabled,\n    rootRef: externalRef\n  } = parameters;\n  const menuContext = React.useContext(DropdownContext);\n  if (menuContext === null) {\n    throw new Error('useMenuButton: no menu context available.');\n  }\n  const {\n    state,\n    dispatch,\n    registerTrigger,\n    popupId\n  } = menuContext;\n  const {\n    getRootProps: getButtonRootProps,\n    rootRef: buttonRootRef,\n    active\n  } = useButton({\n    disabled,\n    focusableWhenDisabled,\n    rootRef: externalRef\n  });\n  const handleRef = useForkRef(buttonRootRef, registerTrigger);\n  const createHandleClick = otherHandlers => event => {\n    otherHandlers.onClick?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    dispatch({\n      type: DropdownActionTypes.toggle,\n      event\n    });\n  };\n  const createHandleKeyDown = otherHandlers => event => {\n    otherHandlers.onKeyDown?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      dispatch({\n        type: DropdownActionTypes.open,\n        event\n      });\n    }\n  };\n  const getOwnRootProps = (otherHandlers = {}) => ({\n    onClick: createHandleClick(otherHandlers),\n    onKeyDown: createHandleKeyDown(otherHandlers)\n  });\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    const getCombinedProps = combineHooksSlotProps(getOwnRootProps, getButtonRootProps);\n    return {\n      'aria-haspopup': 'menu',\n      'aria-expanded': state.open,\n      'aria-controls': popupId,\n      ...externalProps,\n      ...externalEventHandlers,\n      ...getCombinedProps(externalEventHandlers),\n      tabIndex: 0,\n      // this is needed to make the button focused after click in Safari\n      ref: handleRef\n    };\n  };\n  return {\n    active,\n    getRootProps,\n    open: state.open,\n    rootRef: handleRef\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}